/*
 * Copyright (c) 2011-2021 Contributors to the Eclipse Foundation
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
 * which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 */
package io.vertx.oracle;

import io.vertx.codegen.annotations.DataObject;
import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;
import io.vertx.core.tracing.TracingPolicy;
import io.vertx.sqlclient.SqlConnectOptions;

@DataObject(generateConverter = true)
public class OracleConnectOptions extends SqlConnectOptions {

  private String url;

  // connection
  private boolean readOnly;
  private String catalog;
  private TransactionIsolation transactionIsolation;
  private ResultSetType resultSetType;
  private ResultSetConcurrency resultSetConcurrency;
  // backwards compatibility
  private boolean autoGeneratedKeys = true;
  private JsonArray autoGeneratedKeysIndexes;
  private String schema;
  // statement
  private int queryTimeout;
  private int maxRows;
  // resultset
  private FetchDirection fetchDirection;
  private int fetchSize;


  // Support TNS_ADMIN (tnsnames.ora, ojdbc.properties).
  private String tnsAdmin;

  // Support wallet properties for TCPS/SSL/TLS
  private String walletLocation;
  private String walletPassword;

  // Support keystore properties for TCPS/SSL/TLS
  private String keyStore;
  private String keyStoreType;
  private String keyStorePassword;

  // Support truststore properties for TCPS/SSL/TLS
  private String trustStore;
  private String trustStoreType;
  private String trustStorePassword;

  // Support authentication services (RADIUS, KERBEROS, and TCPS)
  private String authenticationServices;
  private int connectTimeout;
  private int idleTimeout;


  private boolean metricsEnabled;
  private TracingPolicy tracingPolicy;

  public OracleConnectOptions(JsonObject toJson) {
    super(toJson);
    // TODO Copy
  }

  public OracleConnectOptions() {

  }

  public OracleConnectOptions(SqlConnectOptions options) {
    super(options);
    // TODO Copy
  }

  // TODO...

  public String getUrl() {
    return url;
  }

  public OracleConnectOptions setUrl(String url) {
    this.url = url;
    return this;
  }

  public boolean isMetricsEnabled() {
    return metricsEnabled;
  }

  public OracleConnectOptions setMetricsEnabled(boolean metricsEnabled) {
    this.metricsEnabled = metricsEnabled;
    return this;
  }

  /**
   * @return the tracing policy
   */
  public TracingPolicy getTracingPolicy() {
    return tracingPolicy;
  }

  /**
   * Set the tracing policy for the client behavior when Vert.x has tracing enabled.
   *
   * @param tracingPolicy the tracing policy
   * @return a reference to this, so the API can be used fluently
   */
  public OracleConnectOptions setTracingPolicy(TracingPolicy tracingPolicy) {
    this.tracingPolicy = tracingPolicy;
    return this;
  }

  // Oracle specifics

  public String getTnsAdmin() {
    return tnsAdmin;
  }

  public OracleConnectOptions setTnsAdmin(String tnsAdmin) {
    this.tnsAdmin = tnsAdmin;
    return this;
  }

  public String getWalletLocation() {
    return walletLocation;
  }

  public OracleConnectOptions setWalletLocation(String walletLocation) {
    this.walletLocation = walletLocation;
    return this;
  }

  public String getWalletPassword() {
    return walletPassword;
  }

  public OracleConnectOptions setWalletPassword(String walletPassword) {
    this.walletPassword = walletPassword;
    return this;
  }

  public String getKeyStore() {
    return keyStore;
  }

  public OracleConnectOptions setKeyStore(String keyStore) {
    this.keyStore = keyStore;
    return this;
  }

  public String getKeyStoreType() {
    return keyStoreType;
  }

  public OracleConnectOptions setKeyStoreType(String keyStoreType) {
    this.keyStoreType = keyStoreType;
    return this;
  }

  public String getKeyStorePassword() {
    return keyStorePassword;
  }

  public OracleConnectOptions setKeyStorePassword(String keyStorePassword) {
    this.keyStorePassword = keyStorePassword;
    return this;
  }

  public String getTrustStore() {
    return trustStore;
  }

  public OracleConnectOptions setTrustStore(String trustStore) {
    this.trustStore = trustStore;
    return this;
  }

  public String getTrustStoreType() {
    return trustStoreType;
  }

  public OracleConnectOptions setTrustStoreType(String trustStoreType) {
    this.trustStoreType = trustStoreType;
    return this;
  }

  public String getTrustStorePassword() {
    return trustStorePassword;
  }

  public OracleConnectOptions setTrustStorePassword(String trustStorePassword) {
    this.trustStorePassword = trustStorePassword;
    return this;
  }

  public String getAuthenticationServices() {
    return authenticationServices;
  }

  public OracleConnectOptions setAuthenticationServices(String authenticationServices) {
    this.authenticationServices = authenticationServices;
    return this;
  }

  @Override
  public OracleConnectOptions setPort(int port) {
    super.setPort(port);
    return this;
  }

  @Override
  public OracleConnectOptions setHost(String host) {
    super.setHost(host);
    return this;
  }

  @Override
  public OracleConnectOptions setDatabase(String db) {
    super.setDatabase(db);
    return this;
  }

  @Override
  public OracleConnectOptions setUser(String user) {
    super.setUser(user);
    return this;
  }

  @Override
  public OracleConnectOptions setPassword(String pwd) {
    super.setPassword(pwd);
    return this;
  }

  public int getConnectTimeout() {
    return connectTimeout;
  }

  public OracleConnectOptions setConnectTimeout(int connectTimeout) {
    this.connectTimeout = connectTimeout;
    return this;
  }

  public int getIdleTimeout() {
    return idleTimeout;
  }

  public OracleConnectOptions setIdleTimeout(int idleTimeout) {
    this.idleTimeout = idleTimeout;
    return this;
  }

  public boolean isReadOnly() {
    return readOnly;
  }

  public OracleConnectOptions setReadOnly(boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  public String getCatalog() {
    return catalog;
  }

  public OracleConnectOptions setCatalog(String catalog) {
    this.catalog = catalog;
    return this;
  }

  public TransactionIsolation getTransactionIsolation() {
    return transactionIsolation;
  }

  public OracleConnectOptions setTransactionIsolation(TransactionIsolation transactionIsolation) {
    this.transactionIsolation = transactionIsolation;
    return this;
  }

  public ResultSetType getResultSetType() {
    return resultSetType;
  }

  public OracleConnectOptions setResultSetType(ResultSetType resultSetType) {
    this.resultSetType = resultSetType;
    return this;
  }

  public ResultSetConcurrency getResultSetConcurrency() {
    return resultSetConcurrency;
  }

  public OracleConnectOptions setResultSetConcurrency(ResultSetConcurrency resultSetConcurrency) {
    this.resultSetConcurrency = resultSetConcurrency;
    return this;
  }

  public boolean isAutoGeneratedKeys() {
    return autoGeneratedKeys;
  }

  public OracleConnectOptions setAutoGeneratedKeys(boolean autoGeneratedKeys) {
    this.autoGeneratedKeys = autoGeneratedKeys;
    return this;
  }

  public JsonArray getAutoGeneratedKeysIndexes() {
    return autoGeneratedKeysIndexes;
  }

  public OracleConnectOptions setAutoGeneratedKeysIndexes(JsonArray autoGeneratedKeysIndexes) {
    this.autoGeneratedKeysIndexes = autoGeneratedKeysIndexes;
    return this;
  }

  public String getSchema() {
    return schema;
  }

  public OracleConnectOptions setSchema(String schema) {
    this.schema = schema;
    return this;
  }

  public int getQueryTimeout() {
    return queryTimeout;
  }

  public OracleConnectOptions setQueryTimeout(int queryTimeout) {
    this.queryTimeout = queryTimeout;
    return this;
  }

  public int getMaxRows() {
    return maxRows;
  }

  public OracleConnectOptions setMaxRows(int maxRows) {
    this.maxRows = maxRows;
    return this;
  }

  public FetchDirection getFetchDirection() {
    return fetchDirection;
  }

  public OracleConnectOptions setFetchDirection(FetchDirection fetchDirection) {
    this.fetchDirection = fetchDirection;
    return this;
  }

  public int getFetchSize() {
    return fetchSize;
  }

  public OracleConnectOptions setFetchSize(int fetchSize) {
    this.fetchSize = fetchSize;
    return this;
  }
}
